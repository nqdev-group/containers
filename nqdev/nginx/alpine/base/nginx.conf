# Tải các module đã cài đặt
load_module /usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_image_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_xslt_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_geoip_module.so;
load_module /usr/lib/nginx/modules/ngx_stream_geoip_module.so;
load_module /usr/lib/nginx/modules/ngx_http_js_module.so;
load_module /usr/lib/nginx/modules/ngx_stream_js_module.so;

# run nginx in foreground
# daemon  off;
# user nobody; # a directive in the 'main' context
user    nginx;
pid     /var/run/nginx.pid;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes  auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# error_log <path_to_log_file> <log_level>;
# <log_level>: debug | info | notice | warn | error | crit | alert | emerg
error_log  /var/log/nginx/error.log notice;

events {
    # configuration of connection processing
    worker_connections  1024;
}


http {
    js_path "/etc/nginx/njs/";

    include                       /etc/nginx/mime.types;
    default_type                  application/octet-stream;
    # Bật tính năng gửi tệp từ máy chủ NGINX một cách tối ưu.
    sendfile                      on;
    server_tokens                 off;
    tcp_nopush                    on;
    tcp_nodelay                   on;
    # để xác định đường dẫn lưu trữ tạm thời cho các dữ liệu thân (body) của các yêu cầu HTTP
    client_body_temp_path         /var/tmp/nginx/cache/body 1 2;
    # Thời gian chờ giữ kết nối HTTP keep-alive.
    # Nếu không có yêu cầu nào mới, kết nối sẽ được đóng sau 90 giây.
    keepalive_timeout             90s;
    proxy_connect_timeout         90s;
    proxy_send_timeout            90s;
    proxy_read_timeout            90s;
    ssl_prefer_server_ciphers     on;
    gzip                          on;
    proxy_ignore_client_abort     off;
    client_max_body_size          2000m;
    server_names_hash_bucket_size 1024;
    proxy_http_version            1.1;
    proxy_set_header              X-Forwarded-Scheme $scheme;
    proxy_set_header              X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header              Accept-Encoding "";
    proxy_cache                   off;
    proxy_cache_path              /var/tmp/nginx/cache/public  levels=1:2 keys_zone=public-cache:30m max_size=192m;
    proxy_cache_path              /var/tmp/nginx/cache/private levels=1:2 keys_zone=private-cache:5m max_size=1024m;

    # Log format and fallback log file
    include /etc/nginx/include/log.conf;

    # Dynamically generated DNS resolvers file
    include /etc/nginx/include/resolvers.conf;

    # Default upstream scheme
    map $host $forward_scheme {
        default http;
    }

    # ===== http_realip_module =====
    # Real IP Determination

    # Local subnets:
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12; # Includes Docker subnet
    set_real_ip_from 192.168.0.0/16;
    set_real_ip_from 192.168.1.0/24;
    # NPM generated CDN ip ranges:
    include /etc/nginx/include/ip_ranges.conf;
    # always put the following 2 lines after ip subnets:
    real_ip_header X-Real-IP; # Dùng header này để lấy IP thật từ proxy
    real_ip_recursive on; # Kiểm tra tất cả các proxy để tìm IP thật

    # ===== ngx_http_headers_more_filter_module =====
    # Xóa header "X-Powered-By" khỏi tất cả các phản hồi
    more_clear_headers "X-Powered-By";
    more_clear_headers "Server";

    # ===== ngx_http_geoip_module =====
    geoip_country           /usr/share/GeoIP/GeoIP.dat;
    geoip_city              /usr/share/GeoIP/GeoLiteCity.dat;
    geoip_proxy_recursive   on;

    # Bao gồm tất cả các cấu hình khác từ thư mục `conf.d`.
    include /etc/nginx/conf.d/*.conf;
}

stream {
    # ===== ngx_http_geoip_module =====
    geoip_country           /usr/share/GeoIP/GeoIP.dat;
    geoip_city              /usr/share/GeoIP/GeoLiteCity.dat;

    # Files generated by NPM
    # Bao gồm tất cả các cấu hình khác từ thư mục `stream.d`.
    include /etc/nginx/stream.d/*.conf;
}

include /etc/nginx/conf.d/*.main;
include /etc/nginx/stream.d/*.main;
